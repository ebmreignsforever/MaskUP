System.register("chunks:///_virtual/Camera.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var o,t,i,r,n,s,l,a,p,d,u,f,c;return{setters:[function(e){o=e.applyDecoratedDescriptor,t=e.inheritsLoose,i=e.initializerDefineProperty,r=e.assertThisInitialized},function(e){n=e.cclegacy,s=e._decorator,l=e.Node,a=e.CCFloat,p=e.RenderTexture,d=e.Vec3,u=e.director,f=e.lerp,c=e.Component}],execute:function(){var h,y,P,m,w,b,C,g,S,v,x,T,z;n._RF.push({},"270e5nQNTRMpK0W8fKHBRCa","Camera",void 0);var B=s.ccclass,N=s.property,R=e("Camera",(h=B("Camera"),y=N({type:l,tooltip:"PlayerPosition"}),P=N({type:a,tooltip:"Camer Lerp Speed"}),m=N({type:l,tooltip:"UpperBound"}),w=N(R),b=N(p),h((S=o((g=function(e){function o(){for(var o,t=arguments.length,n=new Array(t),s=0;s<t;s++)n[s]=arguments[s];return o=e.call.apply(e,[this].concat(n))||this,i(o,"playerPosition",S,r(o)),i(o,"smoothSpeed",v,r(o)),i(o,"upperBoundNode",x,r(o)),i(o,"renderCam",T,r(o)),i(o,"renderTex",z,r(o)),o.offset=void 0,o.onSetOffset=!1,o}t(o,e);var n=o.prototype;return n.onLoad=function(){},n.start=function(){this.node.position=d.ZERO,this.renderCam=this.node.getComponent(o),this.renderCam&&this.renderTex&&(this.renderCam.renderTex=this.renderTex),u.addPersistRootNode(this.node)},n.update=function(e){null!=this.playerPosition&&(this.playerPosition.worldPosition.y>this.upperBoundNode.worldPosition.y||this.playerPosition.worldPosition.y>this.upperBoundNode.worldPosition.y-100)?(!1===this.onSetOffset&&(this.offset=this.playerPosition.worldPosition.y-this.node.worldPosition.y,this.onSetOffset=!0,console.log("Offset: ===>>"+this.offset)),this.node.worldPosition=new d(this.node.worldPosition.x,f(this.node.worldPosition.y,this.playerPosition.worldPosition.y-this.offset,this.smoothSpeed),0)):this.onSetOffset=!1},o}(c)).prototype,"playerPosition",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),v=o(g.prototype,"smoothSpeed",[P],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.5}}),x=o(g.prototype,"upperBoundNode",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),T=o(g.prototype,"renderCam",[w],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),z=o(g.prototype,"renderTex",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),C=g))||C));n._RF.pop()}}}));

System.register("chunks:///_virtual/FollowCamMap.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(o){var e,t,r,i,n,a,l,p;return{setters:[function(o){e=o.applyDecoratedDescriptor,t=o.inheritsLoose,r=o.initializerDefineProperty,i=o.assertThisInitialized},function(o){n=o.cclegacy,a=o._decorator,l=o.Node,p=o.Component}],execute:function(){var c,s,u,d,f;n._RF.push({},"9be67OHpURA0ovTw2xfNLqF","FollowCamMap",void 0);var y=a.ccclass,h=a.property;o("FollowCamMap",(c=y("FollowCamMap"),s=h(l),c((f=e((d=function(o){function e(){for(var e,t=arguments.length,n=new Array(t),a=0;a<t;a++)n[a]=arguments[a];return e=o.call.apply(o,[this].concat(n))||this,r(e,"playerNode",f,i(e)),e}t(e,o);var n=e.prototype;return n.start=function(){},n.update=function(o){this.node.worldPosition=this.playerNode.worldPosition},e}(p)).prototype,"playerNode",[s],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),u=d))||u));n._RF.pop()}}}));

System.register("chunks:///_virtual/FollowPlayer.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var o,r,t,i,l,n,a,c;return{setters:[function(e){o=e.applyDecoratedDescriptor,r=e.inheritsLoose,t=e.initializerDefineProperty,i=e.assertThisInitialized},function(e){l=e.cclegacy,n=e._decorator,a=e.Node,c=e.Component}],execute:function(){var s,p,u,y,d;l._RF.push({},"712a8SzpWZF3ozLavRsfK10","FollowPlayer",void 0);var f=n.ccclass,h=n.property;e("FollowPlayer",(s=f("FollowPlayer"),p=h(a),s((d=o((y=function(e){function o(){for(var o,r=arguments.length,l=new Array(r),n=0;n<r;n++)l[n]=arguments[n];return o=e.call.apply(e,[this].concat(l))||this,t(o,"playerNode",d,i(o)),o}r(o,e);var l=o.prototype;return l.start=function(){},l.update=function(e){this.node.worldPosition=this.playerNode.worldPosition},o}(c)).prototype,"playerNode",[p],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),u=y))||u));l._RF.pop()}}}));

System.register("chunks:///_virtual/GameManger.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var t,r,o,i,a,l,n,c,s,p,u,y,d,g,h,m,b,f,C,N,S,v,w,z;return{setters:[function(e){t=e.applyDecoratedDescriptor,r=e.inheritsLoose,o=e.initializerDefineProperty,i=e.assertThisInitialized},function(e){a=e.cclegacy,l=e._decorator,n=e.Node,c=e.CCFloat,s=e.Material,p=e.AudioSource,u=e.ParticleSystem2D,y=e.RichText,d=e.director,g=e.Sprite,h=e.Color,m=e.Animation,b=e.RigidBody2D,f=e.Vec2,C=e.math,N=e.BoxCollider2D,S=e.Collider2D,v=e.Contact2DType,w=e.game,z=e.Component}],execute:function(){var P,D,H,I,G,O,B,F,M,R,T,x,A,_,k,E,V,L,Z,j,J,U,X,q,K,Q,W,Y,$,ee,te,re;a._RF.push({},"93d07msJX1GZZb027c0c6Od","GameManger",void 0);var oe=l.ccclass,ie=l.property;e("GameManger",(P=oe("GameManger"),D=ie({visible:!0,readonly:!0}),H=ie({type:n,tooltip:"Player Score Counter"}),I=ie({type:n,tooltip:"Player Score Counter"}),G=ie(n),O=ie({type:n,tooltip:"Player NOde"}),B=ie({type:n,tooltip:"Player NOde"}),F=ie({type:c,tooltip:"Player Increase Force"}),M=ie(n),R=ie(n),T=ie(s),x=ie(s),A=ie(p),_=ie(u),k=ie(u),P(((re=function(e){function t(){for(var t,r=arguments.length,a=new Array(r),l=0;l<r;l++)a[l]=arguments[l];return t=e.call.apply(e,[this].concat(a))||this,o(t,"sectionHeader",L,i(t)),o(t,"playerscoreNode",Z,i(t)),o(t,"playerHighscoreNode",j,i(t)),o(t,"repaly",J,i(t)),o(t,"playerNode",U,i(t)),o(t,"backGroundNode",X,i(t)),o(t,"increaseForce",q,i(t)),o(t,"CameraNode",K,i(t)),o(t,"colliderNode",Q,i(t)),o(t,"uvOffset",W,i(t)),o(t,"wave",Y,i(t)),o(t,"hitSource",$,i(t)),o(t,"burst",ee,i(t)),o(t,"death",te,i(t)),t.score=0,t.playerCollider=void 0,t.PlayerData={id:"Null",highScore:0},t}r(t,e);var a=t.prototype;return a.onLoad=function(){t.instance?this.destroy():t.instance=this;var e=localStorage.getItem("playerHighscore");null===e?(localStorage.setItem("playerHighscore","0000"),console.log("Data saved!")):(console.log("Data already exists:"),e=localStorage.getItem("playerHighscore"),this.playerHighscoreNode.getComponent(y).string=e.toString())},a.start=function(){this.loadOnPlay(),d.preloadScene("MainScene",(function(){console.log("Next scene preloaded")}))},a.update=function(e){this.uvOffset.setProperty("time",performance.now()),this.wave.setProperty("time",performance.now())},a.onBeginContact=function(e,t,r){if("mask"===t.node.name){this.score++,this.node.children.forEach((function(e){e.getComponent(g).color=h.RED})),this.hitSource.play();var o=this.playerscoreNode.getComponent(y);o&&(o.string=this.score.toString());var i=t.node.parent.getComponent(m);i&&i.play("GroundBurst"),this.burst&&this.burst.resetSystem();var a=this.playerNode.getComponent(b);a.linearVelocity=new f(a.linearVelocity.x,C.clamp(a.linearVelocity.y+this.increaseForce,0,70))}if("Ground"==t.node.name){var l=this.playerscoreNode.getComponent(y),n=this.playerHighscoreNode.getComponent(y),c=localStorage.getItem("playerHighscore");this.hitSource.play(),parseInt(c.toString())<parseInt(l.string)&&(n.string=l.string,localStorage.setItem("playerHighscore",l.string)),this.death&&this.death.resetSystem(),this.playerNode.getChildByName("Sprite").active=!1,this.playerNode.getComponent(N).enabled=!1,this.playerNode.getComponent(b).enabled=!1,this.repaly.active=!0}},a.OnReplay=function(){this.repaly.active=!1,d.loadScene("MainScene",(function(){console.log("This runs AFTER the scene has fully loaded")})),t.instance=null},a.loadOnPlay=function(){this.playerCollider=this.playerNode.getComponent(S),this.playerCollider&&this.playerCollider.on(v.BEGIN_CONTACT,this.onBeginContact,this),w.frameRate=60},t}(z)).instance=void 0,L=t((V=re).prototype,"sectionHeader",[D],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return"===UI Properties"}}),Z=t(V.prototype,"playerscoreNode",[H],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),j=t(V.prototype,"playerHighscoreNode",[I],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),J=t(V.prototype,"repaly",[G],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),U=t(V.prototype,"playerNode",[O],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),X=t(V.prototype,"backGroundNode",[B],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),q=t(V.prototype,"increaseForce",[F],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 2}}),K=t(V.prototype,"CameraNode",[M],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Q=t(V.prototype,"colliderNode",[R],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),W=t(V.prototype,"uvOffset",[T],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Y=t(V.prototype,"wave",[x],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),$=t(V.prototype,"hitSource",[A],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),ee=t(V.prototype,"burst",[_],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),te=t(V.prototype,"death",[k],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),E=V))||E));a._RF.pop()}}}));

System.register("chunks:///_virtual/LeaderBoard.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var t,o,a,r,n,i,l,s,c,d,u,p,f,b;return{setters:[function(e){t=e.applyDecoratedDescriptor,o=e.inheritsLoose,a=e.initializerDefineProperty,r=e.assertThisInitialized,n=e.asyncToGenerator,i=e.regeneratorRuntime},function(e){l=e.cclegacy,s=e._decorator,c=e.Node,d=e.Button,u=e.EditBox,p=e.resources,f=e.JsonAsset,b=e.Component}],execute:function(){var g,y,x,m,D,w,h;l._RF.push({},"6cedbIC5bhCc4rQUPRmYlOH","LeaderBoard",void 0);var S=s.ccclass,v=s.property;e("LeaderBoard",(g=S("LeaderBoard"),y=v({type:c,tooltip:"TextBox"}),x=v({type:c,tooltip:"submitButton"}),g((w=t((D=function(e){function t(){for(var t,o=arguments.length,n=new Array(o),i=0;i<o;i++)n[i]=arguments[i];return t=e.call.apply(e,[this].concat(n))||this,a(t,"textboxNode",w,r(t)),a(t,"submitButtonNode",h,r(t)),t.jsonPlayerData=void 0,t.textbox=void 0,t}o(t,e);var l=t.prototype;return l.start=function(){var e=this;this.getComponent(d);this.textbox=this.textboxNode.getComponent(u),p.load("PlayerData",f,(function(t,o){if(t)console.error("Failed to load JSON:",t);else{var a=localStorage.getItem("playerData");null===a?(e.jsonPlayerData=o.json,localStorage.setItem("playerData",JSON.stringify(e.jsonPlayerData)),console.log("Data saved!")):console.log("Data already exists:",JSON.parse(a))}}))},l.submitScore=function(){var e=n(i().mark((function e(){var t,o,a,r,n,l,s,c,d,u,p;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(a=50,null!=this.textbox&&(o=this.textbox.string),null!=(t=window.firebase)&&t.app){e.next=5;break}return console.error("Firebase DB not found"),e.abrupt("return");case 5:return e.next=7,window.firebase.addDoc(window.firebase.collection(window.firebase.db,"LeaderBoard"),{name:o,score:a,timestamp:Date.now()});case 7:if(r=e.sent,console.log("Collection ID: "+r.id),null==r){e.next=25;break}if(n=localStorage.getItem("playerData"),l=n?JSON.parse(n):{},console.log("Parsed ID: "+l.id),"null"!=l.id){e.next=25;break}return l.id=r.id,localStorage.setItem("playerData",JSON.stringify(l)),s=localStorage.getItem("playerData"),c=s?JSON.parse(s):{},console.log("Saved Id: "+c.id),console.log("Found document:"),d=window.firebase.doc(window.firebase.db,"LeaderBoard",c.id),e.next=23,window.firebase.getDoc(d);case 23:(u=e.sent).exists()?(p=u.data(),console.log("Found document:"+p)):console.log("No document found with ID:"+c.id);case 25:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),l.resetLocalStorage=function(){p.load("PlayerData",f,(function(e,t){if(e)console.error("Failed to load JSON:",e);else localStorage.setItem("playerData",JSON.stringify(t.json))}))},t}(b)).prototype,"textboxNode",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),h=t(D.prototype,"submitButtonNode",[x],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),m=D))||m));l._RF.pop()}}}));

System.register("chunks:///_virtual/LoadPersistNode.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var o,t,r,n,s;return{setters:[function(e){o=e.inheritsLoose},function(e){t=e.cclegacy,r=e._decorator,n=e.director,s=e.Component}],execute:function(){var c;t._RF.push({},"da5faUwPB5JFrYZaY7U9zrW","LoadPersistNode",void 0);var i=r.ccclass;r.property,e("LoadPersistNode",i("LoadPersistNode")(c=function(e){function t(){return e.apply(this,arguments)||this}o(t,e);var r=t.prototype;return r.onLoad=function(){},r.start=function(){n.loadScene("MainScene")},r.update=function(e){},t}(s))||c);t._RF.pop()}}}));

System.register("chunks:///_virtual/main",["./Camera.ts","./FollowCamMap.ts","./FollowPlayer.ts","./GameManger.ts","./LeaderBoard.ts","./LoadPersistNode.ts","./ObjectPool.ts","./PlayerScript.ts","./RenderTextureSprite.ts","./ReturnPoolObject.ts","./TileGenerator.ts"],(function(){return{setters:[null,null,null,null,null,null,null,null,null,null,null],execute:function(){}}}));

System.register("chunks:///_virtual/ObjectPool.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(o){var t,e,i,n,l,r,s,a,c,u,p,P;return{setters:[function(o){t=o.applyDecoratedDescriptor,e=o.initializerDefineProperty,i=o.inheritsLoose,n=o.assertThisInitialized},function(o){l=o.cclegacy,r=o._decorator,s=o.Prefab,a=o.CCInteger,c=o.CCString,u=o.instantiate,p=o.BoxCollider2D,P=o.Component}],execute:function(){var h,b,f,g,j,d,y,T,v,m,L,z,O,k;l._RF.push({},"5680elkez1LE6ZqyBRD/MMY","ObjectPool",void 0);var x=r.ccclass,C=r.property,w=o("PoolContainer",(h=x("PoolContainer"),b=C({type:s,tooltip:"Prefab Object for Pooling"}),f=C({type:a,tooltip:"ObjectPool Size"}),g=C({type:c,tooltip:"ObjectPool Size"}),h((y=t((d=function(){e(this,"tileObject",y,this),e(this,"poolSize",T,this),e(this,"PoolName",v,this)}).prototype,"tileObject",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new s}}),T=t(d.prototype,"poolSize",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 10}}),v=t(d.prototype,"PoolName",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return"Empty"}}),j=d))||j));o("ObjectPool",(m=x("ObjectPool"),L=C({type:[w],tooltip:"List of objects to pool"}),m((k=t((O=function(o){function t(){for(var t,i=arguments.length,l=new Array(i),r=0;r<i;r++)l[r]=arguments[r];return t=o.call.apply(o,[this].concat(l))||this,e(t,"objectsToPool",k,n(t)),t.indexTrack=new Map,t.PoolList=new Map,t}i(t,o);var l=t.prototype;return l.onLoad=function(){this.InitializePool()},l.start=function(){},l.update=function(o){},l.InitializePool=function(){for(var o=0;o<this.objectsToPool.length;o++){this.PoolList.set(this.objectsToPool[o].PoolName,[]),this.indexTrack.set(this.objectsToPool[o].PoolName,0);for(var t=0;t<this.objectsToPool[o].poolSize;t++){if(null===this.objectsToPool[o].tileObject)return void console.log("Pool Index "+o+": --is Empty attach a prefab ");var e=u(this.objectsToPool[o].tileObject);e.parent=this.node,e.setWorldPosition(700,500,0),e.active=!1;var i=e.getComponent(p);i&&i.apply(),this.PoolList.get(this.objectsToPool[o].PoolName).push(e)}console.log("Pool:"+o+" ---"+this.PoolList.get(this.objectsToPool[o].PoolName).length)}},l.GetPoolObject=function(o){if(this.PoolList.has(o)){if(this.indexTrack.get(o)===this.PoolList.get(o).length)for(var t=0;t<this.PoolList.get(o).length;t++){if(!1===this.PoolList.get(o)[t].active){this.indexTrack.set(o,t);break}return null}if(!1===this.PoolList.get(o)[this.indexTrack.get(o)].active){var e=this.PoolList.get(o)[this.indexTrack.get(o)],i=this.indexTrack.get(o);return this.indexTrack.set(o,i+1),e.active=!0,e}return null}return console.log("Pool Name not found"),null},l.ReturnPoolObject=function(){},t}(P)).prototype,"objectsToPool",[L],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),z=O))||z));l._RF.pop()}}}));

System.register("chunks:///_virtual/PlayerScript.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var t,i,n,o,r,a,s,l,c,u,h,p,f,y,d,g,w,O,m,S;return{setters:[function(e){t=e.applyDecoratedDescriptor,i=e.inheritsLoose,n=e.initializerDefineProperty,o=e.assertThisInitialized},function(e){r=e.cclegacy,a=e._decorator,s=e.CCFloat,l=e.Camera,c=e.Material,u=e.Vec2,h=e.RigidBody2D,p=e.Collider2D,f=e.Vec3,y=e.input,d=e.Input,g=e.view,w=e.clamp,O=e.PhysicsSystem2D,m=e.Component,S=e.pingPong}],execute:function(){var P,v,b,C,k,T,F,x,z,M,L,B,V,E,D,U,_,G,H,X,A,I,R,W,Y;r._RF.push({},"2cc07HTzO5L94b0kKNustGT","PlayerScript",void 0);var N=a.ccclass,j=a.property,K=(e("PlayerScript",(P=N("PlayerScript"),v=j({visible:!0,readonly:!0}),b=j({type:s,tooltip:"Player Horizontal Speed X-axis"}),C=j({type:s,tooltip:"Player Move Up Speed"}),k=j({type:s,tooltip:"Player Move Up Speed"}),T=j({type:s,tooltip:"Length of Ping Pong Effect"}),F=j({type:s,tooltip:"Speed of Ping Pong Effect"}),x=j(l),z=j(l),M=j({type:s,tooltip:"Mouse Offset"}),L=j(c),B=j(u),P((D=t((E=function(e){function t(){for(var t,i=arguments.length,r=new Array(i),a=0;a<i;a++)r[a]=arguments[a];return t=e.call.apply(e,[this].concat(r))||this,n(t,"sectionHeader",D,o(t)),n(t,"horizontalSpeed",U,o(t)),n(t,"playerUpForce",_,o(t)),n(t,"playerDownForce",G,o(t)),n(t,"pingPongLength",H,o(t)),n(t,"pingPongSpeed",X,o(t)),n(t,"mainCamera",A,o(t)),n(t,"textureCamera",I,o(t)),n(t,"mouseOffsetX",R,o(t)),n(t,"Shockwave",W,o(t)),n(t,"waveOffset",Y,o(t)),t.currentPlayerState=K.OnBounce,t.rb=new h,t.playerCollider=new p,t.inputTriggerClick=!1,t.captureGroundOffsetY=0,t.oneTimeClick=!1,t.oneClickOffsetf=new f(0,0,0),t.magnitudeOffset=0,t.out=new f,t}i(t,e);var r=t.prototype;return r.onLoad=function(){},r.start=function(){y.on(d.EventType.MOUSE_DOWN,this.OnMouseInput,this),y.on(d.EventType.TOUCH_START,this.OnTouchInput,this),this.rb=this.node.getComponent(h),this.playerCollider=this.node.getComponent(p),y.on(d.EventType.MOUSE_MOVE,this.onMouseMove,this),y.on(d.EventType.TOUCH_MOVE,this.onTouchMove,this),this.captureGroundOffsetY=this.node.position.y},r.update=function(e){if(this.PlayerStates(e),this.Shockwave){var t=new f(this.node.worldPosition.x,this.node.worldPosition.y-this.waveOffset.y),i=new u(g.getVisibleSize().width,g.getVisibleSize().height);this.textureCamera.worldToScreen(this.node.worldPosition,t);var n=new u(t.x/i.x,t.y/i.y);this.Shockwave.setProperty("center",n),this.playShockwave(3,2,.5,e)}},r.PlayerStates=function(e){function t(t){return e.apply(this,arguments)}return t.toString=function(){return e.toString()},t}((function(e){this.currentPlayerState===K.OnBounce?(this.node.position=new f(this.node.position.x,S(performance.now()*this.pingPongSpeed,this.pingPongLength)+this.captureGroundOffsetY),this.inputTriggerClick&&(this.currentPlayerState=K.OnForce,console.log("Player State :: From OnBounce =>  OnForce"))):this.currentPlayerState===K.OnForce?this.inputTriggerClick||console.log("Player State :: From OnForce =>  OnFall"):this.currentPlayerState===K.OnFall&&(this.inputTriggerClick?(this.currentPlayerState=K.OnForce,console.log("Player State :: From OnFall =>  OnForce")):this.checkForGround()&&(this.currentPlayerState=K.OnBounce,console.log("Player State :: From OnFall => OnBounce"),this.captureGroundOffsetY=this.node.position.y))})),r.OnTouchInput=function(e){this.mainCamera.screenToWorld(new f(e.getLocation().x,e.getLocation().y),this.oneClickOffsetf),this.magnitudeOffset=f.distance(new f(this.node.worldPosition.x,0,0),new f(this.oneClickOffsetf.x,0,0)),this.oneTimeClick||(this.rb.linearVelocity=new u(this.rb.linearVelocity.x,this.playerUpForce),this.inputTriggerClick=!0,this.oneTimeClick=!0)},r.OnMouseInput=function(e){this.mainCamera.screenToWorld(new f(e.getLocation().x,e.getLocation().y),this.oneClickOffsetf),this.magnitudeOffset=f.distance(new f(this.node.worldPosition.x,0,0),new f(this.oneClickOffsetf.x,0,0)),f.subtract(this.oneClickOffsetf,this.node.worldPosition,this.oneClickOffsetf),this.oneTimeClick||(this.rb.linearVelocity=new u(this.rb.linearVelocity.x,this.playerUpForce),this.inputTriggerClick=!0,this.oneTimeClick=!0)},r.OnTouchRelease=function(){this.rb.linearVelocity=new u(this.rb.linearVelocity.x,-this.playerDownForce),this.inputTriggerClick=!1},r.onMouseMove=function(e){var t=e.getLocation();this.mainCamera.screenToWorld(new f(t.x,t.y),this.out);var i=(this.out.x-(this.mouseOffsetX-this.magnitudeOffset))*this.horizontalSpeed,n=(this.out.x+(this.mouseOffsetX-this.magnitudeOffset))*this.horizontalSpeed,o=this.node.worldPosition.x<this.out.x?i:n;this.node.worldPosition=new f(w(o,0,1080),this.node.worldPosition.y)},r.onTouchMove=function(e){var t=e.getLocation();this.mainCamera.screenToWorld(new f(t.x,t.y),this.out);var i=(this.out.x-(this.mouseOffsetX-this.magnitudeOffset))*this.horizontalSpeed,n=(this.out.x+(this.mouseOffsetX-this.magnitudeOffset))*this.horizontalSpeed,o=this.node.worldPosition.x<this.out.x?n:i;this.node.worldPosition=new f(w(o,0,1080),this.node.worldPosition.y)},r.checkForGround=function(){var e=this,t=!1;this.playerCollider&&O.instance.testAABB(this.playerCollider.worldAABB).forEach((function(i){i!==e.playerCollider&&0!=(1&i.node.layer)&&(t=!0)}));return t},r.playShockwave=function(e,t,i,n){var o=this;if(this.Shockwave){var r=-e;this.schedule((function e(){if(!((r+=n)<0)){if(r>t)return o.Shockwave.setProperty("shockwaveSize",0),o.Shockwave.setProperty("shockwaveSharpness",.1),void o.unschedule(e);var a=i*(r/t);o.Shockwave.setProperty("shockwaveSize",a),o.Shockwave.setProperty("shockwaveSharpness",2*a)}}),0)}},t}(m)).prototype,"sectionHeader",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return"=== Player Mechanics"}}),U=t(E.prototype,"horizontalSpeed",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 100}}),_=t(E.prototype,"playerUpForce",[C],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),G=t(E.prototype,"playerDownForce",[k],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),H=t(E.prototype,"pingPongLength",[T],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),X=t(E.prototype,"pingPongSpeed",[F],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),A=t(E.prototype,"mainCamera",[x],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),I=t(E.prototype,"textureCamera",[z],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),R=t(E.prototype,"mouseOffsetX",[M],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 500}}),W=t(E.prototype,"Shockwave",[L],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Y=t(E.prototype,"waveOffset",[B],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new u(0,0)}}),V=E))||V)),function(e){return e[e.OnBounce=0]="OnBounce",e[e.OnFall=1]="OnFall",e[e.OnForce=2]="OnForce",e}(K||{}));r._RF.pop()}}}));

System.register("chunks:///_virtual/RenderTextureSprite.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var r,t,n,i,a,o,u,p,s,c,l,h;return{setters:[function(e){r=e.applyDecoratedDescriptor,t=e.inheritsLoose,n=e.initializerDefineProperty,i=e.assertThisInitialized},function(e){a=e.cclegacy,o=e._decorator,u=e.Sprite,p=e.Camera,s=e.RenderTexture,c=e.SpriteFrame,l=e.UITransform,h=e.Component}],execute:function(){var d,f,m,g,y,T,b;a._RF.push({},"a0ad94bbC5GcaTr098NUNar","RenderTextureSprite",void 0);var x=o.ccclass,v=o.property;e("RenderTextureSprite",(d=x("RenderTextureSprite"),f=v(u),m=v(p),d((T=r((y=function(e){function r(){for(var r,t=arguments.length,a=new Array(t),o=0;o<t;o++)a[o]=arguments[o];return r=e.call.apply(e,[this].concat(a))||this,n(r,"sprite",T,i(r)),n(r,"camera",b,i(r)),r._renderTex=null,r}return t(r,e),r.prototype.start=function(){this.camera=this.node.getComponent(p);var e=new s;e.reset({width:1024,height:1024}),this.camera.targetTexture=e;var r=new c;r.texture=e,this.sprite.spriteFrame=r,this.sprite.getComponent(l).setContentSize(1024,1024)},r}(h)).prototype,"sprite",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),b=r(y.prototype,"camera",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),g=y))||g));a._RF.pop()}}}));

System.register("chunks:///_virtual/ReturnPoolObject.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(t){var o,n,e,r,c,i;return{setters:[function(t){o=t.inheritsLoose},function(t){n=t.cclegacy,e=t._decorator,r=t.Collider2D,c=t.Contact2DType,i=t.Component}],execute:function(){var l;n._RF.push({},"b4673/XzCdJDpsAPii/Mx9O","ReturnPoolObject",void 0);var s=e.ccclass;e.property,t("ReturnPoolObject",s("ReturnPoolObject")(l=function(t){function n(){for(var o,n=arguments.length,e=new Array(n),r=0;r<n;r++)e[r]=arguments[r];return(o=t.call.apply(t,[this].concat(e))||this).Collider=void 0,o}o(n,t);var e=n.prototype;return e.start=function(){this.Collider=this.node.getComponent(r),this.Collider.on(c.BEGIN_CONTACT,this.onBeginContact,this)},e.update=function(t){},e.onBeginContact=function(t,o,n){console.log("onBeginContact Destroy"),"Ground"==o.node.name&&(o.node.active=!1)},n}(i))||l);n._RF.pop()}}}));

System.register("chunks:///_virtual/TileGenerator.ts",["./rollupPluginModLoBabelHelpers.js","cc","./ObjectPool.ts"],(function(e){var o,t,r,i,l,a,n,p,c,s,y,f,u;return{setters:[function(e){o=e.applyDecoratedDescriptor,t=e.inheritsLoose,r=e.initializerDefineProperty,i=e.assertThisInitialized},function(e){l=e.cclegacy,a=e._decorator,n=e.Node,p=e.CCFloat,c=e.randomRange,s=e.Collider2D,y=e.Animation,f=e.Component},function(e){u=e.ObjectPool}],execute:function(){var d,h,b,P,g,S,m,j,N;l._RF.push({},"26a24dGXU5Neolyz34RcSft","TileGenerator",void 0);var O=a.ccclass,v=a.property;e("TileGenerator",(d=O("TileGenerator"),h=v({type:n,tooltip:"ObjectPoll"}),b=v({type:n,tooltip:"PlayerPosition"}),P=v({type:p,tooltip:"Spacing between spawns"}),d((m=o((S=function(e){function o(){for(var o,t=arguments.length,l=new Array(t),a=0;a<t;a++)l[a]=arguments[a];return o=e.call.apply(e,[this].concat(l))||this,r(o,"objectPoolNode",m,i(o)),r(o,"playerNode",j,i(o)),r(o,"Space",N,i(o)),o.playerSpaceOffset=0,o.playerSpaceTrack=0,o.ObjectPoolref=void 0,o}t(o,e);var l=o.prototype;return l.start=function(){this.ObjectPoolref=this.objectPoolNode.getComponent(u),this.playerSpaceOffset=this.playerNode.worldPosition.y},l.update=function(e){if(this.playerSpaceTrack=this.playerNode.worldPosition.y-this.playerSpaceOffset,null!=this.ObjectPoolref&&this.playerSpaceTrack>this.Space){var o=this.ObjectPoolref.GetPoolObject("Ground");if(null!=o){o.setWorldPosition(c(150,900),this.playerNode.worldPosition.y+this.Space,0),o.getChildByName("mask").getComponent(s).apply(),o.getComponents(s).forEach((function(e){e.apply(),console.log("Collider offset at: "+e.offset)}));var t=o.getComponent(y);t&&(t.stop(),t.play("GroundIdle"))}this.playerSpaceOffset=this.playerNode.worldPosition.y}},o}(f)).prototype,"objectPoolNode",[h],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),j=o(S.prototype,"playerNode",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),N=o(S.prototype,"Space",[P],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 500}}),g=S))||g));l._RF.pop()}}}));

(function(r) {
  r('virtual:///prerequisite-imports/main', 'chunks:///_virtual/main'); 
})(function(mid, cid) {
    System.register(mid, [cid], function (_export, _context) {
    return {
        setters: [function(_m) {
            var _exportObj = {};

            for (var _key in _m) {
              if (_key !== "default" && _key !== "__esModule") _exportObj[_key] = _m[_key];
            }
      
            _export(_exportObj);
        }],
        execute: function () { }
    };
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,